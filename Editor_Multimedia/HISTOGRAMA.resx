<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button9.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAANdQAADXUAV5l5QgAAARzSURBVFhH1ZZZaFVXFIaTB01iU6NQQUwQQik0TSer1Laa
        ImiQUoqtT9ZirX3RVOuDIyl9cnjQB9FSQYpUwbYE2voqDo0PDnFIJ6HF3EhTUAOKvUlMrne+p9+/zzq3
        uT251wy++MPP2nv9a6999nh22WOFXC43Ay7zPO8zeBAehV/DvbAFvmahjxbZbLaJjtXZL/AW5Rj0RAPF
        XBRGKJ8hfht2ujUfP0hSB4/Av4d15kA9DnvhXas7v+E+9Q641lKNHYxCU90JM8poHfwEP4WvU38B20Bc
        I5xL+W18+7C3oAP1e2hfUZxkaUcHGn5Mox6XBVA/i1lCslnYyRYWAloNbIBbYRIKadofHxwcrLaw0qCT
        5TTqoZHfnA2XyWTqTB4VBgYGqsizkLa/Wp4sts3k4iCwnsCrWEzOI0kLnT9h8piRSqWeJ9c5fQH5knCX
        SSODAG04t+aglfq4Ow/AAF4m100/pfcXfMOkQiAspkO37thTjH62SRNCOp0uJ+W7ygu0FN+bVAgbfdaP
        85phuUl5ELMBNlu1ANFodDLaRtrNMVce+J6Cx6EGdwMzzyQfOGdBHTnhBKw1KQ903XRROET5I3M74KvA
        p7WOMXM95s4Dv2ZhKRR0f+wwyQfO93C684tdD0Pnlql8E3/MYhKY1fKzxpXU1bmmV1qHa/A/8GFPE6PR
        K+akuX3g+Bw+kKjjY+4CIJWjrcCqcyVJwU/gBTWTD/3nRCIxzZoUAFnL8K3iQKe5feD4Ul6SaXpfNHcI
        fX195ejvw+CSyVB2Bx3TySxNtdAQkslkNTE7XCvP+9PcPnAcUR7YyyieM3dRELcWBsdV6IIljyx6Bdyk
        YNp2m9sHvsP2Afcol/wAXUzEdSiPkhl0yXxgISOCgVURt13BxHaZ2we+PdBtIhA6RgHo/En0SwoChOeu
        Y4Pl0EesxIaOr4C/Bn2/i/S8383tA2Ed/MfEd1ivUBL8U4i5DBWjTdcRj8flW0U5+IiENqo1KQBaLTyt
        INqcN7cPfPqd6jEh8QtMaDPh24QWx6rzi9zzU0yS9iFacDpum7sASC+had9gcsfM/R9wtpvYi33W3Hkw
        slfQutHaWYp85wHQVqPdIS6UHL824BYo6AFTcJE5kEA79L4iKOvNV2HShMEHN5LzJlR6beDwXcGXTyNA
        G0xRKepNJk0I5JoOtawamG7SVpPCQNRLyG1Ggn/DNJo0LtC+EuofIuiUnenv7y/6onIg8BBMuyaep2t2
        DhzxaJUCJ0kz2gJdImwXS7HI5OJgd08i/gcY3HRau+Xc8TMtpCRisVgVOfQuDK53l4MlXWMhDwdfqtvu
        Oxo+CEYAfoRvwWdINoN7v5qHpqZYN1wNvlqoo7YN3sEXIEI9vOtHAxruht3QcjncoP4N3El5M2yFB6Be
        zsOhE9VO3AJLNz4wG3rdtkGNxF02pUCMzvkVbGskEhnz3ikKkr4K9Ts9QXK9nP/A6qP0J7yG1YbVzKwa
        GhoKXVSPFOxwPS705J5Ph/Ow9SY9bigr+xeRDCW/U4rqTgAAAABJRU5ErkJggg==
</value>
  </data>
</root>